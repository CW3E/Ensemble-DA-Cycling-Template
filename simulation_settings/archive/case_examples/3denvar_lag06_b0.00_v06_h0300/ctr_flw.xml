<?xml version="1.0"?>
<!DOCTYPE workflow
[
  <!-- GSI Observation-Analysis-Forecast Cycling Workflow -->

  <!-- CONTROL FLOW NAME / TUNABLE SETTINGS -->
  <!ENTITY LAG          "06"> <!-- Define the lag of the ensemble simulation start time here in HH -->
  <!ENTITY BETA         "0.00"> <!-- Define tuneable beta value for ensemble / static background hybridization here -->
  <!ENTITY S_ENS_V      "06"> <!-- Define tuneable beta value for ensemble vertical localization scale here -->
  <!ENTITY S_ENS_H      "0300"> <!-- Define tuneable value for ensemble horizontal localization scale here -->
  <!ENTITY CSE_NAME     "VD"> <!-- Define the case study name for experiment group -->
  <!ENTITY CNFG_NAME    "3denvar_lag&LAG;_b&BETA;_v&S_ENS_V;_h&S_ENS_H;"> <!-- Configuration name including tunable parameters -->
  <!ENTITY EXP_NAME     "&CSE_NAME;/&CNFG_NAME;"> <!-- Experiment logs and data are defined in the case / configuration nested structure -->
  <!-- END CONTROL FLOW NAME / TUNABLE SETTINGS -->

  <!-- COMPUTER-DEPENDENT ITEMS -->
  <!ENTITY CLNE_ROOT    "/cw3e/mead/projects/cwp106/scratch/GSI-WRF-Cycling-Template"> <!-- Full path of framework git clone -->
  <!ENTITY SOFT_ROOT    "/cw3e/mead/projects/cwp106/scratch/SOFT_ROOT"> <!-- Root directory of software stack executables -->
  <!ENTITY DATA_ROOT    "/cw3e/mead/projects/cwp106/scratch/DATA/&CSE_NAME;"> <!-- Root directory of case study forcing data -->
  <!ENTITY WORK_ROOT    "/cw3e/mead/projects/cwp106/scratch/GSI-WRF-Cycling-Template"> <!-- Root directory of EXP_HME defined below -->
  <!-- END COMPUTER-DEPENDENT -->

  <!-- WORKFLOW SETTINGS -->
  <!ENTITY EXP_HME      "&WORK_ROOT;/data/simulation_io/&EXP_NAME;"> <!-- Root directory of experiment I/O --> 
  <!ENTITY EXP_LOG      "&CLNE_ROOT;/logs/&EXP_NAME;"> <!-- Root directory of workflow task logs -->
  <!ENTITY EXP_CNFG     "&CLNE_ROOT;/simulation_settings/&EXP_NAME;"> <!-- Root directory of experiment configuration files -->
  <!ENTITY SCRIPTS      "&CLNE_ROOT;/scripts"> <!-- Root directory of workflow framework scripts -->
  <!ENTITY DRIVERS      "&SCRIPTS;/drivers"> <!-- Root directory of task driver scripts -->
  <!ENTITY UTILITY      "&SCRIPTS;/utilities"> <!-- Root directory of utility scripts -->
  <!ENTITY ENVRNMTS     "&SCRIPTS;/environments"> <!-- Root directory of software stack environment scripts -->
  <!-- END WORKFLOW SETTINGS -->

  <!-- SOFTWARE SETTINGS -->
  <!ENTITY WPS_ROOT     "&SOFT_ROOT;/WRF_CODE/WRF_4.4.2/WPS"> <!-- Root directory of WPS clean build -->
  <!ENTITY WRF_ROOT     "&SOFT_ROOT;/WRF_CODE/WRF_4.4.2/WRF"> <!-- Root directory of WRF clean build -->
  <!ENTITY WRFDA_ROOT   "&SOFT_ROOT;/WRF_CODE/WRF_4.4.2/WRFDA"> <!-- Root directory of WRFDA clean build -->
  <!ENTITY GSI_EXE      "&SOFT_ROOT;/GSI_CODE/comGSIv3.7_EnKFv1.3/build/bin/gsi.x"> <!-- Full path to GSI executable (locations vary across HPC Stack / Tar builds) -->
  <!ENTITY CRTM_ROOT    "&SOFT_ROOT;/CRTM_CODE/CRTM_v2.3.0/Big_Endian"> <!-- Root directory of CRTM files for GSI analysis -->
  <!ENTITY WRF_CNST     "&ENVRNMTS;/WRF_constants.sh"> <!-- Full path to WRF software environment sourced file -->
  <!ENTITY GSI_CNST     "&ENVRNMTS;/GSI_constants.sh"> <!-- Full path of GSI software environment sourced file -->
  <!-- END SOFTWARE SETTINGS -->

  <!-- CYCLING SETTINGS -->
  <!ENTITY CYC_STRT     "20190209"> <!-- First initial time for a DA cycle including analsysis and forecast -->
  <!ENTITY WRM_END      "20190210"> <!-- Last initial time for a cycle without a forecast -->
  <!ENTITY CYC_END      "20190214"> <!-- Last initial time for a DA cycle including analysis and forecast -->
  <!ENTITY CYC_INT      "06"> <!-- Interval between cycle start / end times NOTE: cycle groups must match -->
  <!ENTITY FCST_HRS     "06"> <!-- Fixed length forecast length within every cycle in HH, usually equal to CYC_INT -->
  <!-- END CYCLING SETTINGS -->

  <!-- FORECAST VERIFICATION SETTINGS -->
  <!ENTITY EXP_VRF      "2019021500"> <!-- Verification time for dynamic length forecast simulations -->
  <!ENTITY VRF_STRT     "20190211"> <!-- First cycle to begin forecast verifcation at valid date -->
  <!ENTITY VRF_END      "20190214"> <!-- Last cycle to begin forecast verification at valid date -->
  <!ENTITY VRF_FOR_DOM  "02"> <!-- Min domain index to have ICs downscaled from d01 for forecast validation -->
  <!-- END FORECAST VERIFICATION SETTINGS -->

  <!-- CONTROL SETTINGS -->
  <!ENTITY CTR_BKG_DATA "GFS"> <!-- GFS and GEFS currently supported for 3D-(En)VAR -->
  <!ENTITY CTR_BKG_INT  "03"> <!-- Data file frequency for control simulation forcing in HH -->
  <!ENTITY CTR_CYC_DOM  "01"> <!-- Max domain for control cycling simulation -->
  <!ENTITY CTR_FOR_DOM  "02"> <!-- Max domain for control forecast simulation -->
  <!-- END CONTROL SETTINGS -->

  <!-- ENSEMBLE SETTINGS -->
  <!ENTITY WRF_ENS_ROOT "&DATA_ROOT;/ensembles/lag&LAG;"> <!-- Static ensemble perturbations stored here organized by lag length --> 
  <!ENTITY MEM_LIST     "01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20"> <!-- list of ensemble perturbation indices -->
  <!ENTITY N_ENS        "20"> <!-- Must equal the max index of the MEM_LIST above or 00 if not hybrid DA -->
  <!ENTITY WRF_ENS_DOM  "01"> <!-- Max domain for ensemble simulation -->
  <!-- END ENSEMBLE SETTINGS -->

  <!-- WRF SETTINGS -->
  <!ENTITY WRFOUT_INT   "03"> <!-- Output interval for wrfout files in HH -->
  <!ENTITY IF_SST_UPDTE "No"> <!-- This setting defines SST updates in simulation and is applied to both WRF and real.exe runs -->
  <!ENTITY IF_FEEDBACK  "No"> <!-- This setting defines Yes / No for nested domain 2-way coupling -->
  <!ENTITY NIO_TPG      "0"> <!-- Quilting tasks per group, set NIO_TPG=0 for default TURN OFF QUILTING --> 
  <!ENTITY NIO_GROUPS   "4"> <!-- Quilting number of groups -->
  <!-- END WRF SETTINGS -->

  <!-- GSI SETTINGS -->
  <!ENTITY IF_HYBRID    "Yes"> <!-- Uses ensemble-based covariance Yes / No -->
  <!ENTITY MAX_BC_LOOP  "02"> <!-- Max loop index to iterate GSI variational bias correction files, loop 0 uses GDAS global files -->
  <!-- END GSI SETTINGS -->
 
  <!-- JOB SETTINGS -->
  <!ENTITY SCHED        "slurm"> <!-- Machine scheduler, note native scheduler commands in tasks below -->
  <!ENTITY PROJECT      "--account=cwp106"> <!-- Project billing account -->
  <!ENTITY PART_COMPU   "--partition=compute"> <!-- Slurm partition for standard computing -->
  <!ENTITY PART_DEBUG   "--partition=shared">  <!-- Slurm partition for small jobs / rapid debugging -->
  <!ENTITY PART_INTRCT  "--partition=compute"> <!-- Slurm partition for rapid / interactive jobs -->
  <!ENTITY PART_LRGMEM  "--partition=large-shared"> <!-- Slurm partition for large memory jobs such as GSI -->
  <!ENTITY MPIRUN       "mpirun"> <!-- MPI exec command to call multiprocess jobs with (machine and scheduler specific) -->
  <!ENTITY WPS_PROC     "24"> <!-- WPS parallel / REAL number of procs (all serial jobs are hard-coded as 1) -->
  <!ENTITY WPS_MEM      "5G"> <!-- WPS MEM per CPU argument for SLURM -->
  <!ENTITY WPS_NODESIZE "24"> <!-- WPS node size -->
  <!ENTITY WPS_NODES    "1"> <!-- Number of nodes for WPS / REAL jobs -->
  <!ENTITY WPS_CYC_WC   "00:30:00"> <!-- Wallclock limit for WPS short-range cycling -->
  <!ENTITY WPS_FOR_WC   "01:00:00"> <!-- Wallclock limit for WPS extended forecast jobs -->
  <!ENTITY WRF_PROC     "384"> <!-- WRF number of procs -->
  <!ENTITY WRF_MEM      "5G"> <!-- WRF MEM per CPU argument for SLURM -->
  <!ENTITY WRF_NODESIZE "24"> <!-- WRF node size -->
  <!ENTITY WRF_NODES    "16"> <!-- Number of nodes for WRF jobs -->
  <!ENTITY WRF_CYC_WC   "01:30:00"> <!-- Wallclock limit for WRF short-range cycling -->
  <!ENTITY WRF_FOR_WC   "03:30:00"> <!-- Wallclock limit for WRF short-range cycling with nested domain -->
  <!ENTITY WRF_RST_WC   "60:00:00"> <!-- Wallclock limit for WRF extended restart forecast -->
  <!ENTITY GSI_PROC     "64"> <!-- GSI number of procs -->
  <!ENTITY GSI_MEM      "21G"> <!-- GSI MEM per CPU argument for SLURM -->
  <!ENTITY GSI_NODESIZE "64"> <!-- GSI node size -->
  <!ENTITY GSI_NODES    "1"> <!-- Number of nodes for GSI jobs -->
  <!ENTITY GSI_WC       "06:30:00"> <!-- Wallclock limit for GSI jobs -->
  <!-- END JOB SETTINGS -->
]>

<workflow realtime="F" scheduler="&SCHED;">
  <!-- DEFINE CYCLE GROUPS -->
  <!-- NOTE: WE WILL USE DISTINCT CYCLE GROUPS AT 00 / 06 / 12 / 18 HRS TO CONTROL FORECAST AUTOMATION -->
  <cycledef group="00Z_no_forecast">&CYC_STRT;0000 &WRM_END;0000 24:00:00</cycledef>
  <cycledef group="00Z_forecast">&VRF_STRT;0000 &VRF_END;0000 24:00:00</cycledef>
  <cycledef group="06Z">&CYC_STRT;0600 &CYC_END;0000 24:00:00</cycledef>
  <cycledef group="12Z">&CYC_STRT;1200 &CYC_END;0000 24:00:00</cycledef>
  <cycledef group="18Z">&CYC_STRT;1800 &CYC_END;0000 24:00:00</cycledef>
  <!-- END CYCLE GROUPS -->

  <log verbosity="10"><cyclestr>&EXP_LOG;/@Y@m@d@H/workflow.log</cyclestr></log>
  
  <task name="ungrib_ens_00_cyc" maxtries="12" cycledefs="00Z_no_forecast,06Z,12Z,18Z">
    <command>&DRIVERS;/ungrib.sh</command>
    <cores>1</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_CYC_WC;</walltime>
    <jobname><cyclestr>ungrib_ens_00_cyc_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/ungrib_ens_00.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>BKG_STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>No</value>
    </envar>
    <envar>
      <name>FCST_HRS</name>
      <value>&FCST_HRS;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>BKG_DATA</name>
      <value>&CTR_BKG_DATA;</value>
    </envar>
    <envar>
      <name>IF_ECMWF_ML</name>
      <value>No</value>
    </envar>
    <envar>
      <name>WPS_ROOT</name>
      <value>&WPS_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>DATA_ROOT</name>
      <value>&DATA_ROOT;</value>
    </envar>
    <dependency>
      <not>
        <cycleexistdep cycle_offset="-&CYC_INT;:00:00"/> 
      </not> 	
    </dependency>
  </task>

  <task name="ungrib_ens_00_for" maxtries="12" cycledefs="00Z_forecast">
    <command>&DRIVERS;/ungrib.sh</command>
    <cores>1</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_FOR_WC;</walltime>
    <jobname><cyclestr>ungrib_ens_00_for_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/ungrib_ens_00.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>BKG_STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>Yes</value>
    </envar>
    <envar>
      <name>EXP_VRF</name>
      <value>&EXP_VRF;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>BKG_DATA</name>
      <value>&CTR_BKG_DATA;</value>
    </envar>
    <envar>
      <name>IF_ECMWF_ML</name>
      <value>No</value>
    </envar>
    <envar>
      <name>WPS_ROOT</name>
      <value>&WPS_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>DATA_ROOT</name>
      <value>&DATA_ROOT;</value>
    </envar>
  </task>

  <task name="metgrid_ens_00_cyc" maxtries="12" cycledefs="00Z_no_forecast,06Z,12Z,18Z">
    <command>&DRIVERS;/metgrid.sh</command>
    <cores>&WPS_PROC;</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_CYC_WC;</walltime>
    <jobname><cyclestr>metgrid_ens_00_cyc_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/metgrid_ens_00.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>No</value>
    </envar>
    <envar>
      <name>FCST_HRS</name>
      <value>&FCST_HRS;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>MAX_DOM</name>
      <value>&CTR_CYC_DOM;</value>
    </envar>
    <envar>
      <name>WPS_ROOT</name>
      <value>&WPS_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&WPS_PROC;</value>
    </envar>
    <dependency> 
      <taskdep task="ungrib_ens_00_cyc" state="SUCCEEDED"/>
    </dependency>
  </task>

  <task name="metgrid_ens_00_for" maxtries="12" cycledefs="00Z_forecast">
    <command>&DRIVERS;/metgrid.sh</command>
    <cores>&WPS_PROC;</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_FOR_WC;</walltime>
    <jobname><cyclestr>metgrid_ens_00_for_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/metgrid_ens_00.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>Yes</value>
    </envar>
    <envar>
      <name>EXP_VRF</name>
      <value>&EXP_VRF;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>MAX_DOM</name>
      <value>&CTR_FOR_DOM;</value>
    </envar>
    <envar>
      <name>WPS_ROOT</name>
      <value>&WPS_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&WPS_PROC;</value>
    </envar>
    <dependency> 
      <taskdep task="ungrib_ens_00_for" state="SUCCEEDED"/>
    </dependency>
  </task>

  <task name="real_ens_00_cyc" maxtries="12" cycledefs="00Z_no_forecast,06Z,12Z,18Z">
    <command>&DRIVERS;/real.sh</command>
    <cores>&WPS_PROC;</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_CYC_WC;</walltime>
    <jobname><cyclestr>real_ens_00_cyc_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/real_ens_00.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>No</value>
    </envar>
    <envar>
      <name>FCST_HRS</name>
      <value>&FCST_HRS;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>BKG_DATA</name>
      <value>&CTR_BKG_DATA;</value>
    </envar>
    <envar>
      <name>MAX_DOM</name>
      <value>&CTR_CYC_DOM;</value>
    </envar>
    <envar>
      <name>IF_SST_UPDTE</name>
      <value>&IF_SST_UPDTE;</value>
    </envar>
    <envar>
      <name>WRF_ROOT</name>
      <value>&WRF_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&WPS_PROC;</value>
    </envar>
    <dependency> 
      <taskdep task="metgrid_ens_00_cyc" state="SUCCEEDED"/>
    </dependency>
  </task>

  <task name="real_ens_00_for" maxtries="12" cycledefs="00Z_forecast">
    <command>&DRIVERS;/real.sh</command>
    <cores>&WPS_PROC;</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_FOR_WC;</walltime>
    <jobname><cyclestr>real_ens_00_for_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/real_ens_00.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>Yes</value>
    </envar>
    <envar>
      <name>EXP_VRF</name>
      <value>&EXP_VRF;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>BKG_DATA</name>
      <value>&CTR_BKG_DATA;</value>
    </envar>
    <envar>
      <name>MAX_DOM</name>
      <value>&CTR_FOR_DOM;</value>
    </envar>
    <envar>
      <name>IF_SST_UPDTE</name>
      <value>&IF_SST_UPDTE;</value>
    </envar>
    <envar>
      <name>WRF_ROOT</name>
      <value>&WRF_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&WPS_PROC;</value>
    </envar>
    <dependency> 
      <taskdep task="metgrid_ens_00_for" state="SUCCEEDED"/>
    </dependency>
  </task>

  <task name="wrfda_lowbc" maxtries="12" cycledefs="00Z_no_forecast,00Z_forecast,06Z,12Z,18Z">
    <command>&DRIVERS;/wrfda.sh</command>
    <cores>1</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_CYC_WC;</walltime>
    <jobname><cyclestr>wrfda_lowbc_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/wrfda_lowbc.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
      <name>ANL_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>BOUNDARY</name>
      <value>LOWER</value>
    </envar>
    <envar>
      <name>WRF_CTR_DOM</name>
      <value>&CTR_CYC_DOM;</value>
    </envar>
    <envar>
      <name>IF_ENS_UPDTE</name>
      <value>No</value>
    </envar>
    <envar>
      <name>WRFDA_ROOT</name>
      <value>&WRFDA_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <dependency> 
      <or>
        <taskdep task="real_ens_00_cyc" state="SUCCEEDED"/>
        <taskdep task="real_ens_00_for" state="SUCCEEDED"/>
      </or>
    </dependency>
  </task>

  <task name="gsi_analysis" maxtries="12" cycledefs="00Z_no_forecast,00Z_forecast,06Z,12Z,18Z">
    <command>&DRIVERS;/gsi.sh</command>
    <nodesize>&GSI_NODESIZE;</nodesize>
    <cores>&GSI_PROC;</cores>
    <walltime>&GSI_WC;</walltime>
    <jobname><cyclestr>gsi_analysis_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/gsi_analysis.log</cyclestr></join>
    <native>&PART_LRGMEM;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&GSI_NODES;</native>
    <native>--mem-per-cpu=&GSI_MEM;</native>
    <native>--qos=large-shared-unlim</native>
    <envar>
      <name>CNST</name>
      <value>&GSI_CNST;</value>
    </envar>
    <envar>
      <name>ANL_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>IF_OBSERVER</name>
      <value>No</value>
    </envar>
    <envar>
      <name>WRF_CTR_DOM</name>
      <value>&CTR_CYC_DOM;</value>
    </envar>
    <envar>
      <name>IF_HYBRID</name>
      <value>&IF_HYBRID;</value>
    </envar>
    <envar>
      <name>WRF_ENS_DOM</name>
      <value>&WRF_ENS_DOM;</value>
    </envar>
    <envar>
      <name>N_ENS</name>
      <value>&N_ENS;</value>
    </envar>
    <envar>
      <name>BETA</name>
      <value>&BETA;</value>
    </envar>
    <envar>
      <name>S_ENS_H</name>
      <value>&S_ENS_H;</value>
    </envar>
    <envar>
      <name>S_ENS_V</name>
      <value>&S_ENS_V;</value>
    </envar>
    <envar>
      <name>MAX_BC_LOOP</name>
      <value>&MAX_BC_LOOP;</value>
    </envar>
    <envar>
      <name>IF_4DENVAR</name>
      <value>No</value>
    </envar>
    <envar>
      <name>GSI_EXE</name>
      <value>&GSI_EXE;</value>
    </envar>
    <envar>
      <name>CRTM_ROOT</name>
      <value>&CRTM_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>DATA_ROOT</name>
      <value>&DATA_ROOT;</value>
    </envar>
    <envar>
      <name>ENS_ROOT</name>
      <value><cyclestr>&WRF_ENS_ROOT;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&GSI_PROC;</value>
    </envar>
    <dependency> 
      <taskdep task="wrfda_lowbc" state="SUCCEEDED"/> 
    </dependency>
  </task>

  <task name="wrfda_latbc" maxtries="12" cycledefs="00Z_no_forecast,00Z_forecast,06Z,12Z,18Z">
    <command>&DRIVERS;/wrfda.sh</command>
    <cores>1</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_CYC_WC;</walltime>
    <jobname><cyclestr>wrfda_latbc_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/wrfda_latbc.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
      <name>ANL_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>BOUNDARY</name>
      <value>LATERAL</value>
    </envar>
    <envar>
      <name>IF_ENS_UPDTE</name>
      <value>No</value>
    </envar>
    <envar>
      <name>WRFDA_ROOT</name>
      <value>&WRFDA_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <dependency> 
      <taskdep task="gsi_analysis" state="SUCCEEDED"/>
    </dependency>
  </task>

  <task name="wrf_ens_00_cyc" maxtries="12" cycledefs="00Z_no_forecast,06Z,12Z,18Z">
    <command>&DRIVERS;/wrf.sh</command>
    <cores>&WRF_PROC;</cores>
    <nodesize>&WRF_NODESIZE;</nodesize>
    <walltime>&WRF_CYC_WC;</walltime>
    <jobname><cyclestr>wrf_ens_00_cyc_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/wrf_ens_00.log</cyclestr></join>
    <native>&PART_COMPU;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WRF_NODES;</native>
    <native>--mem-per-cpu=&WRF_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>BKG_DATA</name>
      <value>&CTR_BKG_DATA;</value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>No</value>
    </envar>
    <envar>
      <name>FCST_HRS</name>
      <value>&FCST_HRS;</value>
    </envar>
    <envar>
      <name>WRFOUT_INT</name>
      <value>&WRFOUT_INT;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>CYC_INT</name>
      <value>&CYC_INT;</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>CYC_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MAX_DOM</name>
      <value>&CTR_CYC_DOM;</value>
    </envar>
    <envar>
      <name>DOWN_DOM</name>
      <value>&VRF_FOR_DOM;</value>
    </envar>
    <envar>
      <name>WRF_IC</name>
      <value>CYCLING</value>
    </envar>
    <envar>
      <name>IF_SST_UPDTE</name>
      <value>&IF_SST_UPDTE;</value>
    </envar>
    <envar>
      <name>IF_FEEDBACK</name>
      <value>&IF_FEEDBACK;</value>
    </envar>
    <envar>
      <name>WRF_ROOT</name>
      <value>&WRF_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>DATA_ROOT</name>
      <value>&DATA_ROOT;</value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&WRF_PROC;</value>
    </envar>
    <envar>
      <name>NIO_GROUPS</name>
      <value>&NIO_GROUPS;</value>
    </envar>
    <envar>
      <name>NIO_TPG</name>
      <value>&NIO_TPG;</value>
    </envar>
    <dependency> 
     <taskdep task="wrfda_latbc" state="SUCCEEDED"/>
    </dependency>
  </task>

  <task name="wrf_ens_00_for" maxtries="12" cycledefs="00Z_forecast">
    <command>&DRIVERS;/wrf.sh</command>
    <cores>&WRF_PROC;</cores>
    <nodesize>&WRF_NODESIZE;</nodesize>
    <walltime>&WRF_FOR_WC;</walltime>
    <jobname><cyclestr>wrf_ens_00_for_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/wrf_ens_00.log</cyclestr></join>
    <native>&PART_COMPU;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WRF_NODES;</native>
    <native>--mem-per-cpu=&WRF_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>BKG_DATA</name>
      <value>&CTR_BKG_DATA;</value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>No</value>
    </envar>
    <envar>
      <name>FCST_HRS</name>
      <value>&FCST_HRS;</value>
    </envar>
    <envar>
      <name>WRFOUT_INT</name>
      <value>&WRFOUT_INT;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>CYC_INT</name>
      <value>&CYC_INT;</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>CYC_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MAX_DOM</name>
      <value>&CTR_FOR_DOM;</value>
    </envar>
    <envar>
      <name>DOWN_DOM</name>
      <value>&VRF_FOR_DOM;</value>
    </envar>
    <envar>
      <name>WRF_IC</name>
      <value>CYCLING</value>
    </envar>
    <envar>
      <name>IF_SST_UPDTE</name>
      <value>&IF_SST_UPDTE;</value>
    </envar>
    <envar>
      <name>IF_FEEDBACK</name>
      <value>&IF_FEEDBACK;</value>
    </envar>
    <envar>
      <name>WRF_ROOT</name>
      <value>&WRF_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>DATA_ROOT</name>
      <value>&DATA_ROOT;</value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&WRF_PROC;</value>
    </envar>
    <envar>
      <name>NIO_GROUPS</name>
      <value>&NIO_GROUPS;</value>
    </envar>
    <envar>
      <name>NIO_TPG</name>
      <value>&NIO_TPG;</value>
    </envar>
    <dependency> 
     <taskdep task="wrfda_latbc" state="SUCCEEDED"/>
    </dependency>
  </task>

  <task name="boot_next_cycle" maxtries="3" cycledefs="00Z_no_forecast,00Z_forecast,06Z,12Z,18Z">
    <command>&UTILITY;/boot_next_cycle.sh</command>
    <cores>1</cores>
    <nodesize>&WPS_NODESIZE;</nodesize>
    <walltime>&WPS_CYC_WC;</walltime>
    <jobname><cyclestr>boot_cycle_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/boot_cycle.log</cyclestr></join>
    <native>&PART_DEBUG;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WPS_NODES;</native>
    <native>--mem-per-cpu=&WPS_MEM;</native>
    <envar>
      <name>CLNE_ROOT</name>
      <value>&CLNE_ROOT;</value>
    </envar>
    <envar>
      <name>CYC</name>
      <value><cyclestr offset="&CYC_INT;:00:00">@Y@m@d@H@M</cyclestr></value>
    </envar>
    <envar>
      <name>CSE</name>
      <value>&CSE_NAME;</value>
    </envar>
    <envar>
      <name>FLW</name>
      <value>&CNFG_NAME;</value>
    </envar>
    <dependency> 
      <or>
        <taskdep task="wrf_ens_00_cyc" state="SUCCEEDED"/>
        <taskdep task="wrf_ens_00_for" state="SUCCEEDED"/>
      </or>
    </dependency>
  </task>

  <task name="wrf_ens_00_restart" maxtries="12" cycledefs="00Z_forecast">
    <command>&DRIVERS;/wrf.sh</command>
    <cores>&WRF_PROC;</cores>
    <nodesize>&WRF_NODESIZE;</nodesize>
    <walltime>&WRF_RST_WC;</walltime>
    <jobname><cyclestr>wrf_ens_00_restart_@Y@m@d@H</cyclestr></jobname>
    <join><cyclestr>&EXP_LOG;/@Y@m@d@H/wrf_ens_00_restart.log</cyclestr></join>
    <native>&PART_COMPU;</native>
    <native>&PROJECT;</native>
    <native>--export=ALL</native>
    <native>--nodes=&WRF_NODES;</native>
    <native>--mem-per-cpu=&WRF_MEM;</native>
    <envar>
      <name>CNST</name>
      <value>&WRF_CNST;</value>
    </envar>
    <envar>
       <name>MEMID</name>
       <value>00</value>
    </envar>
    <envar>
      <name>BKG_DATA</name>
      <value>&CTR_BKG_DATA;</value>
    </envar>
    <envar>
      <name>IF_DYN_LEN</name>
      <value>Yes</value>
    </envar>
    <envar>
      <name>EXP_VRF</name>
      <value>&EXP_VRF;</value>
    </envar>
    <envar>
      <name>WRFOUT_INT</name>
      <value>&WRFOUT_INT;</value>
    </envar>
    <envar>
      <name>BKG_INT</name>
      <value>&CTR_BKG_INT;</value>
    </envar>
    <envar>
      <name>CYC_INT</name>
      <value>&CYC_INT;</value>
    </envar>
    <envar>
      <name>STRT_DT</name>
      <value><cyclestr offset="&CYC_INT;:00:00">@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>CYC_DT</name>
      <value><cyclestr>@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>MAX_DOM</name>
      <value>&CTR_FOR_DOM;</value>
    </envar>
    <envar>
      <name>DOWN_DOM</name>
      <value>&VRF_FOR_DOM;</value>
    </envar>
    <envar>
      <name>WRF_IC</name>
      <value>RESTART</value>
    </envar>
    <envar>
      <name>IF_SST_UPDTE</name>
      <value>&IF_SST_UPDTE;</value>
    </envar>
    <envar>
      <name>IF_FEEDBACK</name>
      <value>&IF_FEEDBACK;</value>
    </envar>
    <envar>
      <name>WRF_ROOT</name>
      <value>&WRF_ROOT;</value>
    </envar>
    <envar>
      <name>EXP_CNFG</name>
      <value>&EXP_CNFG;</value>
    </envar>
    <envar>
      <name>CYC_HME</name>
      <value><cyclestr>&EXP_HME;/@Y@m@d@H</cyclestr></value>
    </envar>
    <envar>
      <name>DATA_ROOT</name>
      <value>&DATA_ROOT;</value>
    </envar>
    <envar>
      <name>MPIRUN</name>
      <value>&MPIRUN;</value>
    </envar>
    <envar>
      <name>N_PROC</name>
      <value>&WRF_PROC;</value>
    </envar>
    <envar>
      <name>NIO_GROUPS</name>
      <value>&NIO_GROUPS;</value>
    </envar>
    <envar>
      <name>NIO_TPG</name>
      <value>&NIO_TPG;</value>
    </envar>
    <dependency> 
     <taskdep task="wrf_ens_00_for" state="SUCCEEDED"/>
    </dependency>
    <hangdependency>
      <datadep age="2400"><cyclestr>&EXP_HME;/@Y@m@d@H/wrfprd/ens_00/rsl.out.0000</cyclestr></datadep>
    </hangdependency>
  </task>
</workflow>
